buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath "gradle.plugin.net.minecrell:licenser:0.3"
	}
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'net.minecrell.licenser'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = "0.2.4"
group = "pl.asie.ynot"
archivesBaseName = "YNot"

if (System.getenv("BUILD_NUMBER") != null)
	version += ".${System.getenv("BUILD_NUMBER")}"

configurations {
	deploy
}

dependencies {
	deploy 'org.apache.maven.wagon:wagon-ssh:2.10'
}

minecraft {
	version = "1.12.2-14.23.4.2708"

	runDir = "run"
	useDepAts = true
	makeObfSourceJar = false
	mappings = "snapshot_20180616"

	replace '@VERSION@', project.version
	replace '@MC_VERSION@', version
}

repositories {
	mavenCentral()
	maven {
		url "http://maven.k-4u.nl"
	}
	maven {
		name "Mighty Pirates"
		url "http://maven.cil.li"
	}
	ivy {
		name 'asie dependency mirror'
		artifactPattern "http://asie.pl/javadeps/[module]-[revision](-[classifier]).[ext]"
	}
}

license {
	sourceSets = [project.sourceSets.main]
	header = project.file("docs/licenses/LICENSE")
	ignoreFailures = true
	exclude '**/*.lang'
	exclude '**/*.info'
	exclude '**/*.mcmeta'

	matching('**/pl/asie/charset/api/**') {
		header = project.file("docs/licenses/LICENSE-API")
	}
}

dependencies {
	deobfCompile "com.github.mcjty:xnet:1.12-1.7.0"
	deobfCompile "com.github.mcjty:mcjtylib:1.12-3.0.1"
	deobfCompile "li.cil.oc:OpenComputers:MC1.12-1.7.+:api"
	deobfCompile "li.cil.tis3d:TIS-3D:MC1.12-1.3.+:api"
	deobfCompile name: "Mekanism", version: "1.12.2-9.4.2.328"
	deobfCompile name: "Flamingo", version: "1.12-v1.11"
}

sourceSets {
	main {
		resources {
			srcDirs += 'docs'
		}
	}
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

reobfJar {
	setJar(tasks.jar.archivePath)
}
reobfJar.dependsOn jar

if (file('private.gradle').exists()) {
	apply from: 'private.gradle'
}
